#!/usr/bin/env python3

import sys
import os

from lexer import Source
from lexer import tokenizer
from parser import replace_keywords, fix_variable_declaration
from generation_code import tokens_to_code

if __name__ == '__main__':
    if len(sys.argv) == 1:
        print('Coral Transpiler.')
        while True:
            try:
                source_from_input = input('> ')
            except (EOFError, KeyboardInterrupt):
                break

            source_code = Source(source_from_input)
            tokens = tokenizer(source_code)
            replace_keywords(tokens)
            fix_variable_declaration(tokens)
            code = tokens_to_code(tokens)
            print(code)

    elif len(sys.argv) == 2:
        source_code = Source(sys.argv[1], is_file=True)
        tokens = tokenizer(source_code)
        replace_keywords(tokens)
        fix_variable_declaration(tokens)
        code = tokens_to_code(tokens)

        filename_without_extension = os.path.splitext(sys.argv[1])[0]
        with open(f'{filename_without_extension}.js', 'w') as file_out:
            file_out.write(code)
